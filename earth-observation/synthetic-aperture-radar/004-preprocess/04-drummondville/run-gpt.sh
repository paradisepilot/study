#!/bin/bash

currentDIR=`pwd`
   codeDIR=${currentDIR}/code
 outputDIR=${currentDIR//github/gittmp}/output

parentDIR=`dirname ${currentDIR}`
parentDIR=`dirname ${parentDIR}`
  dataDIR=${parentDIR}/000-data

if [ ! -d ${outputDIR} ]; then
	mkdir -p ${outputDIR}
fi

cp -r ${codeDIR} ${outputDIR}
cp    $0         ${outputDIR}/code

##################################################
inputFolder=drummondville

inputFileStems=( \
    "S1A_IW_GRDH_1SDV_20201228T105633_20201228T105702_035885_0433D2_8E93" \
    "S1A_IW_GRDH_1SDV_20201216T105633_20201216T105703_035710_042DBD_63D3" \
    "S1A_IW_GRDH_1SDV_20201204T105634_20201204T105703_035535_0427A1_E023" \
    "S1A_IW_GRDH_1SDV_20201122T105634_20201122T105704_035360_0421A1_6978" \
    "S1A_IW_GRDH_1SDV_20201110T105634_20201110T105704_035185_041B97_DBE1" \
    "S1A_IW_GRDH_1SDV_20201029T105635_20201029T105704_035010_04157E_4CA0" \
    "S1A_IW_GRDH_1SDV_20201017T105635_20201017T105704_034835_040F86_3B09" \
    "S1A_IW_GRDH_1SDV_20201005T105634_20201005T105704_034660_040962_8F36" \
    "S1A_IW_GRDH_1SDV_20200923T105634_20200923T105704_034485_04033F_0CBA" \
    "S1A_IW_GRDH_1SDV_20200911T105634_20200911T105704_034310_03FD0A_B09F" \
    "S1A_IW_GRDH_1SDV_20200830T105631_20200830T105700_034135_03F6EB_7F07" \
    "S1A_IW_GRDH_1SDV_20200818T105633_20200818T105702_033960_03F0BE_F603" \
    "S1A_IW_GRDH_1SDV_20200806T105632_20200806T105702_033785_03EA99_E5C1" \
    "S1A_IW_GRDH_1SDV_20200725T105631_20200725T105701_033610_03E531_4E4F" \
    "S1A_IW_GRDH_1SDV_20200713T105630_20200713T105700_033435_03DFD1_46B4" \
    "S1A_IW_GRDH_1SDV_20200701T105630_20200701T105659_033260_03DA7C_62BD" \
    "S1A_IW_GRDH_1SDV_20200619T105629_20200619T105659_033085_03D52D_D17B" \
    "S1A_IW_GRDH_1SDV_20200607T105628_20200607T105658_032910_03CFE5_2A8F" \
    "S1A_IW_GRDH_1SDV_20200526T105628_20200526T105657_032735_03CAB9_18BE" \
    "S1A_IW_GRDH_1SDV_20200514T105627_20200514T105657_032560_03C56A_0C9A" \
    "S1A_IW_GRDH_1SDV_20200502T105626_20200502T105656_032385_03BFD6_DBA0" \
    "S1A_IW_GRDH_1SDV_20200420T105626_20200420T105656_032210_03B9AC_5A4A" \
    "S1A_IW_GRDH_1SDV_20200408T105625_20200408T105655_032035_03B387_0761" \
    "S1A_IW_GRDH_1SDV_20200327T105625_20200327T105655_031860_03AD59_D68D" \
    "S1A_IW_GRDH_1SDV_20200315T105625_20200315T105655_031685_03A730_B9FB" \
    "S1A_IW_GRDH_1SDV_20200303T105625_20200303T105654_031510_03A120_775B" \
    "S1A_IW_GRDH_1SDV_20200208T105625_20200208T105655_031160_039510_BDF0" \
    "S1A_IW_GRDH_1SDV_20200127T105625_20200127T105655_030985_038EF2_F2E2" \
    "S1A_IW_GRDH_1SDV_20200115T105626_20200115T105655_030810_0388C8_5AE8" \
    "S1A_IW_GRDH_1SDV_20200103T105626_20200103T105656_030635_0382AB_EEE8" \
    "S1A_IW_GRDH_1SDV_20191222T105627_20191222T105657_030460_037CA1_CF61" \
    "S1A_IW_GRDH_1SDV_20191210T105627_20191210T105657_030285_037698_8855" \
    "S1A_IW_GRDH_1SDV_20191128T105628_20191128T105657_030110_037093_6709" \
    "S1A_IW_GRDH_1SDV_20191116T105628_20191116T105658_029935_036A81_38B7" \
    "S1A_IW_GRDH_1SDV_20191104T105628_20191104T105658_029760_03645D_1B6B" \
    "S1A_IW_GRDH_1SDV_20191023T105628_20191023T105658_029585_035E3A_5CC6" \
    "S1A_IW_GRDH_1SDV_20191011T105628_20191011T105658_029410_03583B_9E7B" \
    "S1A_IW_GRDH_1SDV_20190929T105628_20190929T105658_029235_035239_B926" \
    "S1A_IW_GRDH_1SDV_20190917T105627_20190917T105657_029060_034C38_4599" \
    "S1A_IW_GRDH_1SDV_20190905T105627_20190905T105657_028885_034624_6254" \
    "S1A_IW_GRDH_1SDV_20190824T105626_20190824T105656_028710_034008_A489" \
    "S1A_IW_GRDH_1SDV_20190812T105626_20190812T105656_028535_0339FF_AA34" \
    "S1A_IW_GRDH_1SDV_20190731T105625_20190731T105655_028360_033466_C79D" \
    "S1A_IW_GRDH_1SDV_20190719T105624_20190719T105654_028185_032F0C_B4DB" \
    "S1A_IW_GRDH_1SDV_20190707T105623_20190707T105653_028010_0329C6_C534" \
    "S1A_IW_GRDH_1SDV_20190625T105623_20190625T105652_027835_032474_D61E" \
    "S1A_IW_GRDH_1SDV_20190613T105622_20190613T105652_027660_031F3D_902D" \
    "S1A_IW_GRDH_1SDV_20190601T105621_20190601T105651_027485_0319EB_C9FC" \
    "S1A_IW_GRDH_1SDV_20190520T105621_20190520T105651_027310_031479_E196" \
    "S1A_IW_GRDH_1SDV_20190508T105620_20190508T105650_027135_030F01_2D0E" \
    "S1A_IW_GRDH_1SDV_20190426T105624_20190426T105658_026960_0308BE_052A" \
    "S1A_IW_GRDH_1SDV_20190414T105619_20190414T105649_026785_03026D_4D35" \
    "S1A_IW_GRDH_1SDV_20190402T105619_20190402T105649_026610_02FC07_0CEE" \
    "S1A_IW_GRDH_1SDV_20190321T105619_20190321T105648_026435_02F590_57D4" \
    "S1A_IW_GRDH_1SDV_20190309T105618_20190309T105648_026260_02EF20_CD48" \
    "S1A_IW_GRDH_1SDV_20190225T105618_20190225T105648_026085_02E8D1_D3DD" \
    "S1A_IW_GRDH_1SDV_20190213T105618_20190213T105648_025910_02E289_3755" \
    "S1A_IW_GRDH_1SDV_20190201T105619_20190201T105649_025735_02DC5A_577D" \
    "S1A_IW_GRDH_1SDV_20190120T105619_20190120T105649_025560_02D5F9_E5AE" \
    "S1A_IW_GRDH_1SDV_20190108T105619_20190108T105649_025385_02CFA0_980B" \
    )

##################################################
# preprocessing

if [ `uname` == Darwin ]
then
    PATH=/Applications/snap/bin:$PATH
elif [ `whoami` == jovyan ]
then
    PATH=/home/jovyan/data-vol-1/software/snap/bin:$PATH
else
    PATH=~/Software/SNAP/SNAP_8.0.0/bin:$PATH
fi

for inputFileStem in "${inputFileStems[@]}"
do
    stdoutFile=${outputDIR}/stdout.gpt.${inputFileStem}
    stderrFile=${outputDIR}/stderr.gpt.${inputFileStem}
    gpt ${codeDIR}/S1_GRD_preprocessing.xml \
        -Presolution=10 \
        -Porigin=5 \
        -Pfilter='Refined Lee' \
        -Pdem='SRTM 3Sec' \
        -Pcrs='GEOGCS["WGS84(DD)", DATUM["WGS84", SPHEROID["WGS84", 6378137.0, 298.257223563]], PRIMEM["Greenwich", 0.0], UNIT["degree", 0.017453292519943295], AXIS["Geodetic longitude", EAST], AXIS["Geodetic latitude", NORTH]]' \
        -Pgeoregion='POLYGON(( -72.66 45.78 , -72.32 45.78 , -72.32 46.02 , -72.66 46.02 , -72.66 45.78 ))' \
        -Pinput=${dataDIR}/${inputFolder}/${inputFileStem}.zip \
        -Poutput=${outputDIR}/${inputFileStem}.dim > ${stdoutFile} 2> ${stderrFile}
done

##################################################
# coregistration

fileList=${outputDIR}/${inputFileStems[0]}.dim
for inputFileStem in "${inputFileStems[@]:1}"
do
    fileList=${fileList},${outputDIR}/${inputFileStem}.dim
done

sleep 10
stdoutFile=${outputDIR}/stdout.gpt.coregistration
stderrFile=${outputDIR}/stderr.gpt.coregistration
gpt ${codeDIR}/coregistration.xml \
    -PresamplingType='NONE' \
    -Pextent='Master' \
    -PinitialOffsetMethod='Orbit' \
    -PfileList=${fileList} \
    -Poutput=${outputDIR}/coregistered_stack.dim > ${stdoutFile} 2> ${stderrFile}

##################################################
# save as GeoTIFF

sleep 10
stdoutFile=${outputDIR}/stdout.gpt.export.GeoTIFF
stderrFile=${outputDIR}/stderr.gpt.export.GeoTIFF
gpt ${codeDIR}/export.xml \
    -Pinput=${outputDIR}/coregistered_stack.dim \
    -PoutputFormat='GeoTIFF' \
    -Poutput=${outputDIR}/coregistered_stack > ${stdoutFile} 2> ${stderrFile}

##################################################
# save as NetCDF4-CF

sleep 10
stdoutFile=${outputDIR}/stdout.gpt.export.NetCDF4-CF
stderrFile=${outputDIR}/stderr.gpt.export.NetCDF4-CF
gpt ${codeDIR}/export.xml \
    -Pinput=${outputDIR}/coregistered_stack.dim \
    -PoutputFormat='NetCDF4-CF' \
    -Poutput=${outputDIR}/coregistered_stack > ${stdoutFile} 2> ${stderrFile}

##################################################
exit
